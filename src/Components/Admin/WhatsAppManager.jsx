"use client"

import { useState } from "react"
import {
  Box,
  Typography,
  TextField,
  Paper,
  FormControl,
  InputLabel,
  Select,
  MenuItem,
  Button,
  Alert,
  InputAdornment,
} from "@mui/material"
import { WhatsApp, Verified } from "@mui/icons-material"
import { useAdmin } from "../../contexts/AdminContext"

const countryCodes = [
  { code: "+1", country: "Estados Unidos/Canad√°", flag: "üá∫üá∏" },
  { code: "+34", country: "Espa√±a", flag: "üá™üá∏" },
  { code: "+52", country: "M√©xico", flag: "üá≤üáΩ" },
  { code: "+54", country: "Argentina", flag: "üá¶üá∑" },
  { code: "+55", country: "Brasil", flag: "üáßüá∑" },
  { code: "+56", country: "Chile", flag: "üá®üá±" },
  { code: "+57", country: "Colombia", flag: "üá®üá¥" },
  { code: "+58", country: "Venezuela", flag: "üáªüá™" },
  { code: "+51", country: "Per√∫", flag: "üáµüá™" },
  { code: "+593", country: "Ecuador", flag: "üá™üá®" },
  { code: "+53", country: "Cuba", flag: "üá®üá∫" },
  { code: "+507", country: "Panam√°", flag: "üáµüá¶" },
  { code: "+506", country: "Costa Rica", flag: "üá®üá∑" },
  { code: "+503", country: "El Salvador", flag: "üá∏üáª" },
  { code: "+502", country: "Guatemala", flag: "üá¨üáπ" },
  { code: "+504", country: "Honduras", flag: "üá≠üá≥" },
  { code: "+505", country: "Nicaragua", flag: "üá≥üáÆ" },
  { code: "+1809", country: "Rep√∫blica Dominicana", flag: "üá©üá¥" },
  { code: "+1787", country: "Puerto Rico", flag: "üáµüá∑" },
]

const WhatsAppManager = () => {
  const { adminSettings, updateAdminSettings } = useAdmin()
  const [countryCode, setCountryCode] = useState(adminSettings.countryCode || "+1")
  const [phoneNumber, setPhoneNumber] = useState(
    adminSettings.whatsappNumber?.replace(adminSettings.countryCode || "+1", "") || "",
  )
  const [isVerified, setIsVerified] = useState(false)
  const [verificationCode, setVerificationCode] = useState("")
  const [sentCode, setSentCode] = useState("")
  const [success, setSuccess] = useState(false)

  const generateVerificationCode = () => {
    return Math.floor(100000 + Math.random() * 900000).toString()
  }

  const handleSendVerification = () => {
    const code = generateVerificationCode()
    setSentCode(code)
    // Simular env√≠o de c√≥digo
    alert(`C√≥digo de verificaci√≥n enviado: ${code} (En producci√≥n se enviar√≠a por SMS)`)
  }

  const handleVerifyCode = () => {
    if (verificationCode === sentCode) {
      setIsVerified(true)
      alert("N√∫mero verificado correctamente")
    } else {
      alert("C√≥digo incorrecto")
    }
  }

  const handleSave = () => {
    if (!isVerified) {
      alert("Debe verificar el n√∫mero antes de guardar")
      return
    }

    const fullNumber = countryCode + phoneNumber
    updateAdminSettings({
      whatsappNumber: fullNumber,
      countryCode: countryCode,
    })
    setSuccess(true)
    setTimeout(() => setSuccess(false), 3000)
  }

  const formatPhoneNumber = (number) => {
    // Formato b√°sico para mostrar el n√∫mero
    return number.replace(/(\d{3})(\d{3})(\d{4})/, "($1) $2-$3")
  }

  return (
    <Box>
      <Typography variant="h5" gutterBottom>
        Gesti√≥n de WhatsApp
      </Typography>

      {success && (
        <Alert severity="success" sx={{ mb: 2 }}>
          N√∫mero de WhatsApp actualizado correctamente
        </Alert>
      )}

      <Paper elevation={2} sx={{ p: 3, mb: 3 }}>
        <Typography variant="h6" gutterBottom>
          Configuraci√≥n del N√∫mero de WhatsApp
        </Typography>

        <Box sx={{ display: "flex", gap: 2, mb: 2 }}>
          <FormControl sx={{ minWidth: 200 }}>
            <InputLabel>C√≥digo de Pa√≠s</InputLabel>
            <Select value={countryCode} onChange={(e) => setCountryCode(e.target.value)} label="C√≥digo de Pa√≠s">
              {countryCodes.map((country) => (
                <MenuItem key={country.code} value={country.code}>
                  {country.flag} {country.code} - {country.country}
                </MenuItem>
              ))}
            </Select>
          </FormControl>

          <TextField
            fullWidth
            label="N√∫mero de Tel√©fono"
            value={phoneNumber}
            onChange={(e) => {
              const value = e.target.value.replace(/\D/g, "")
              setPhoneNumber(value)
              setIsVerified(false)
            }}
            placeholder="1234567890"
            InputProps={{
              startAdornment: (
                <InputAdornment position="start">
                  <WhatsApp color="success" />
                </InputAdornment>
              ),
              endAdornment: isVerified && (
                <InputAdornment position="end">
                  <Verified color="success" />
                </InputAdornment>
              ),
            }}
          />
        </Box>

        <Typography variant="body2" color="text.secondary" sx={{ mb: 2 }}>
          N√∫mero completo: {countryCode} {formatPhoneNumber(phoneNumber)}
        </Typography>

        {!isVerified && phoneNumber && (
          <Box sx={{ mb: 2 }}>
            <Button variant="outlined" onClick={handleSendVerification} sx={{ mr: 2 }}>
              Enviar C√≥digo de Verificaci√≥n
            </Button>

            {sentCode && (
              <Box sx={{ mt: 2, display: "flex", gap: 2, alignItems: "center" }}>
                <TextField
                  label="C√≥digo de Verificaci√≥n"
                  value={verificationCode}
                  onChange={(e) => setVerificationCode(e.target.value)}
                  placeholder="123456"
                />
                <Button variant="contained" onClick={handleVerifyCode}>
                  Verificar
                </Button>
              </Box>
            )}
          </Box>
        )}

        <Button
          variant="contained"
          color="primary"
          onClick={handleSave}
          disabled={!isVerified}
          startIcon={<WhatsApp />}
        >
          Guardar N√∫mero de WhatsApp
        </Button>
      </Paper>

      <Paper elevation={2} sx={{ p: 3 }}>
        <Typography variant="h6" gutterBottom>
          Informaci√≥n
        </Typography>
        <Typography variant="body2" color="text.secondary">
          ‚Ä¢ El n√∫mero de WhatsApp se utilizar√° para contacto directo con los clientes ‚Ä¢ Es necesario verificar el n√∫mero
          antes de guardarlo ‚Ä¢ El c√≥digo de verificaci√≥n es simulado en esta demo ‚Ä¢ En producci√≥n, se enviar√≠a un SMS
          real al n√∫mero proporcionado
        </Typography>
      </Paper>
    </Box>
  )
}

export default WhatsAppManager
